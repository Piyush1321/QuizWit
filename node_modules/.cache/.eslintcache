[{"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/index.js":"1","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/reportWebVitals.js":"2","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/App.js":"3","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/Banner.js":"4","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/Home.js":"5","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/includes/Header.js":"6","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/includes/Footer.js":"7","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/Signup.js":"8","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/util/OtpDialog.js":"9","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/ContactUs.js":"10","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/services/Request.js":"11","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/services/Flash.js":"12","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/services/Animation.js":"13","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/index.js":"14","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/App.js":"15","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/reportWebVitals.js":"16","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/ContactUs.js":"17","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Home.js":"18","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Signup.js":"19","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/includes/Header.js":"20","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/includes/Footer.js":"21","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Banner.js":"22","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Request.js":"23","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Flash.js":"24","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Animation.js":"25","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/util/OtpDialog.js":"26","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/util/CookieDialog.js":"27","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Cookie.js":"28","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Faq.js":"29","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/util/PlanCard.js":"30","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Plans.js":"31"},{"size":500,"mtime":1643547771102,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1643547771103,"results":"34","hashOfConfig":"33"},{"size":1248,"mtime":1643796221669,"results":"35","hashOfConfig":"33"},{"size":680,"mtime":1643796204664,"results":"36","hashOfConfig":"33"},{"size":181,"mtime":1643790175023,"results":"37","hashOfConfig":"33"},{"size":2190,"mtime":1643795676524,"results":"38","hashOfConfig":"33"},{"size":3822,"mtime":1643795485008,"results":"39","hashOfConfig":"33"},{"size":12106,"mtime":1643745890668,"results":"40","hashOfConfig":"33"},{"size":1807,"mtime":1643651970087,"results":"41","hashOfConfig":"33"},{"size":235,"mtime":1643748343234,"results":"42","hashOfConfig":"33"},{"size":1816,"mtime":1643650627056,"results":"43","hashOfConfig":"33"},{"size":1416,"mtime":1643745328735,"results":"44","hashOfConfig":"33"},{"size":493,"mtime":1643751396587,"results":"45","hashOfConfig":"33"},{"size":500,"mtime":1643547771102,"results":"46","hashOfConfig":"47"},{"size":868,"mtime":1644186280727,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1643547771103,"results":"49","hashOfConfig":"47"},{"size":1590,"mtime":1644241295239,"results":"50","hashOfConfig":"47"},{"size":269,"mtime":1644068161175,"results":"51","hashOfConfig":"47"},{"size":12280,"mtime":1644186177993,"results":"52","hashOfConfig":"47"},{"size":2382,"mtime":1644059043194,"results":"53","hashOfConfig":"47"},{"size":3822,"mtime":1643795485008,"results":"54","hashOfConfig":"47"},{"size":872,"mtime":1644235903629,"results":"55","hashOfConfig":"47"},{"size":1816,"mtime":1643650627056,"results":"56","hashOfConfig":"47"},{"size":1416,"mtime":1643745328735,"results":"57","hashOfConfig":"47"},{"size":493,"mtime":1643751396587,"results":"58","hashOfConfig":"47"},{"size":1807,"mtime":1643651970087,"results":"59","hashOfConfig":"47"},{"size":1884,"mtime":1644186336676,"results":"60","hashOfConfig":"47"},{"size":1001,"mtime":1644159064041,"results":"61","hashOfConfig":"47"},{"size":3226,"mtime":1644235954108,"results":"62","hashOfConfig":"47"},{"size":1177,"mtime":1644236250753,"results":"63","hashOfConfig":"47"},{"size":5498,"mtime":1644236615742,"results":"64","hashOfConfig":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7lvgax",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"lmcjla",{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"119"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"138","usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"145"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"145"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/index.js",[],[],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/reportWebVitals.js",[],[],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/App.js",["177","178"],[],"import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport $ from 'jquery';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home';\nimport Header from './components/includes/Header';\nimport Footer from './components/includes/Footer';\nimport Signup from './components/Signup';\nimport ContactUs from './components/ContactUs';\n\nfunction App() {\n  useEffect(() => {\n      // $(window).on(\"scroll\", function() {\n      //     if($(window).scrollTop() > 50) {\n      //         $(\"#main-header\").addClass(\"main-header-bg\");\n      //     } else {\n      //        $(\"#main-header\").removeClass(\"main-header-bg\");\n      //     }\n      // });\n      // if($(window).scrollTop() > 50) {\n      //     $(\"#main-header\").addClass(\"main-header-bg\");\n      // } else {\n      //    $(\"#main-header\").removeClass(\"main-header-bg\");\n      // }\n  }, []);\n  return (\n    <>\n      <Router>\n        <Header />\n        <Routes>\n          <Route path='/' element={<Home />}/>\n          <Route path='/signup' element={<Signup />} />\n          <Route path='/contact-us' element={<ContactUs />} />\n        </Routes>\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/Banner.js",[],[],["179","180"],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/Home.js",[],[],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/includes/Header.js",["181","182"],[],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport {Link, NavLink} from 'react-router-dom';\n\nimport Animation from '../../services/Animation';\n\nimport '../css/Header.css'\n\nfunction Header() {\n    const [signin, setSignin] = useState(0);\n    const signinDialog = () => {\n        setSignin(!signin);\n    }\n    useEffect(() => {\n        Animation.toggleDivVertical('signin-dialog', signin, 250, 0);\n    }, [signin]);\n    return (\n        <>\n            <header id=\"main-header\" className='main-header'>\n                <Link className='logo flex-row jc-c' to='/'>\n                    <h3>\n                        <img src='images/logo/logo.png' alt='logo'/>\n                    </h3>\n                </Link>\n                <div className='navigation flex-full flex-row jc-c'>\n                    <NavLink to='/'>Home</NavLink>\n                    <NavLink to='/services'  >Services</NavLink>\n                    <NavLink to='/products' >Blogs</NavLink>\n                    <NavLink to='/contact-us' >Contact Us</NavLink>\n                    <NavLink to='/dashboard' >About Us</NavLink>\n                </div>\n                <div className='sign-up flex-row'>\n                    <Link to='/signup' className='btn btn-primary btn-small'>Sign Up</Link>\n                    <button id=\"signin-btn\" className='btn btn-primary btn-small ml-10' onClick={signinDialog}>Sign In\n                        <div id='signin-dialog'>\n                            <div>\n                                <p>Sign In as</p>\n                                <div className='mt-20 mb-20'>\n                                    <a className='btn btn-primary btn-medium' href='http://localhost:3001' target='_blank'>Admin</a>\n                                    <a className='btn btn-secondary btn-medium ml-10' href='http://localhost:3002' target='_blank'>Student</a>\n                                </div>\n                                <div></div>\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </header>\n            <div className='main-header-padding'></div>\n        </>\n\n    )\n}\n\nexport default Header","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/includes/Footer.js",[],[],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/Signup.js",["183","184"],[],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery';\nimport Request from '../services/Request';\nimport './css/Signup.css'\nimport OtpDialog from './util/OtpDialog';\nimport Flash from '../services/Flash';\n\nfunction Signup() {\n\n    const processing = (el, text) => {\n        let icon = '<i class=\"fas fa-sync-alt fa-spin mr-5\"></i>';\n        el.innerHTML = icon + text;\n    }\n\n    const registration = (e) => {\n        processing(document.getElementById('registration-btn'), 'Processing');\n        e.preventDefault();\n        let emailInput = document.getElementById('email-input');\n        emailInput.disabled = false;\n        let formData = $('#signup-form').serialize();\n        console.log(formData);\n        let url = 'http://localhost:8080/QuizWit/Registration';\n        Request.post(url, formData).then((res) => {\n            populateResponse(res);\n        })\n        return false;\n    }\n\n    const populateResponse = (res) => {\n        document.getElementById('registration-btn').innerText = 'Register';\n        let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n        if(res.error) {\n            Flash.message(res.error, 'bg-danger');\n        }\n        if(res.success) {\n            registrationReset();\n            alert('login successful');\n            Flash.message('Registration successful', 'bg-success');\n        }\n        else {\n            let log = res.errorLog;\n            let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n            responseBlock[0].innerHTML = (log.user ? icon + log.user : '');\n            responseBlock[1].innerHTML = (log.firstName ? icon + log.firstName : '');\n\n            responseBlock[3].innerHTML = (log.gender ? icon + log.gender : '');\n            responseBlock[4].innerHTML = (log.contact ? icon + log.contact: '');\n            responseBlock[5].innerHTML = (log.email ? icon + log.email: '');\n            if(log.email) {\n                document.getElementById('email-verify-btn').style.display = 'block';\n                document.getElementById('email-verified').style.display = 'none';\n                document.getElementById('email-input').disabled = false;\n            }\n            responseBlock[7].innerHTML = (log.dateOfBirth ? icon + log.dateOfBirth: '' );\n            responseBlock[8].innerHTML = (log.password ? icon + log.password: '');\n            responseBlock[9].innerHTML = (log.confirmPassword ? icon + log.confirmPassword: '' );\n        }\n\n    }\n\n    const registrationReset = () => {\n        document.getElementById('email-verified').style.display = 'none';\n        document.getElementById('signup-form').reset();\n        document.getElementById('email-input').disabled = false;\n        let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n        for(let i=0; i<responseBlock.length; i++) {\n            responseBlock[i].innerHTML = '';\n        }\n    }\n\n    const emailVerification = () => {\n        let verifyBtn = document.getElementById('email-verify-btn');\n        processing(verifyBtn, 'Sending OTP');\n        let emailElementId = 'email-input';\n        let email = document.getElementById(emailElementId).value;\n        let userEl = document.getElementsByName('user');\n        let user;\n        if(!userEl[0].checked && !userEl[1].checked) {\n            user = '';\n        }\n        else {\n            user = '&user=';\n            user += userEl[0].checked ? userEl[0].value : userEl[1].value;\n        }\n        let data = 'email=' + email + user;\n        console.log(data);\n        let url = 'http://localhost:8080/QuizWit/EmailVerification';\n        Request.post(url, data).then((res) => {\n            renderOtpDialog(res);\n        }).catch((e) => {\n            // flash message\n        })\n        return false;\n    }\n\n    const [otpDialogToggle, setOtpDialogToggle] = useState(0);\n\n    const renderOtpDialog = (res) => {\n        console.log('render otp dialog function');\n        console.log(res);\n        let verifyBtn = document.getElementById('email-verify-btn');\n        verifyBtn.innerText = 'Verify';\n        if(res.success) {\n            setOtpDialogToggle(!otpDialogToggle);\n            toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n            let otpDialog = document.getElementById('otp-dialog');\n            let inputs = otpDialog.getElementsByTagName('input');\n            inputs[0].focus();\n            console.log('dialog open');\n        }\n        else {\n            let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n            document.getElementById('email-response').innerHTML = icon + res.error;\n        }\n    }\n\n    const toggleDivHorizontal = (id, t, openWidth, closeWidth) => {\n        let el = document.getElementById(id);\n        let width = t ? openWidth : closeWidth;\n        el.style.transition = 'all 800ms';\n        el.style.width = width + 'px';\n    }\n    \n    const matchOtp = () => {\n        let otpDialog = document.getElementById('otp-dialog');\n        let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n        let type = 'emailOtp';\n        let inputs = otpDialog.getElementsByTagName('input');\n        let otp = '';\n        for(let i=0; i<inputs.length; i++) {\n            if(inputs[i].value !== '')\n                otp += inputs[i].value;\n            else {\n                let responseBlock = otpDialog.getElementsByClassName('response')[0];\n                responseBlock.innerHTML = icon + 'OTP required';\n                return;\n            }\n        }\n        let data = 'type=' + type + '&' + 'otp=' + otp;\n        console.log(data);\n        let url = 'http://localhost:8080/QuizWit/VerifyOtp';\n        Request.post(url, data).then((res) => {\n            otpResponse(res);\n        }).catch((e) => {\n            // flash message\n        })\n    }\n\n    useEffect(() => {\n        toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n    }, [])\n    useEffect(() => {\n        toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n    }, [otpDialogToggle]);\n    const otpResponse = (res) => {\n        let otpDialog = document.getElementById('otp-dialog');\n        let responseBlock = otpDialog.getElementsByClassName('response')[0];\n        let verified = document.getElementById('email-verified');\n        if(res.success) {\n            verified.style.display = 'block';\n            document.getElementById('email-input').disabled = true;\n            document.getElementById('email-verify-btn').style.display = 'none';\n            document.getElementById('email-response').innerHTML = '';\n            setOtpDialogToggle(!otpDialogToggle);\n        }\n        else {\n            responseBlock.innerText = res.error;\n            verified.style.display = 'none';\n        }\n    }\n    return (\n        <div className='signup-cover cover'>\n            <OtpDialog onclick1={emailVerification} onclick2={matchOtp}/>\n            <form id='signup-form' className='form sign-up-form' onSubmit={registration}>\n                <div className='header'>Registration</div>\n                <div className='input-block'>\n                    <div className='customized-radio-sticky'>\n                        <label>Registration as</label>\n                        <div>\n                            <label className='flex-full'>\n                                <input type='radio' name='user' value='1' />\n                                <span>Admin</span>\n                            </label>\n                            <label className='flex-full'>\n                                <input type='radio' name='user' value='2' />\n                                <span>Student</span>\n                            </label>\n                        </div>\n                        <div className='response'></div>\n                    </div>\n                </div>\n                <div className='input-block'>\n                    <div className='input-container-bb'>\n                        <input type='text' name='firstName' />\n                        <label>First Name</label>\n                        <div className='response'></div>\n                    </div>\n                    <div className='input-container-bb'>\n                        <input type='text' name='lastName' />\n                        <label>Last Name</label>\n                        <div className='response'></div>\n                    </div>\n                </div>\n                <div className='input-block'>\n                    <div className='customized-radio-sticky'>\n                        <label>Gender</label>\n                        <div>\n                            <label>\n                                <input type='radio' name='gender' value='1' />\n                                <span>Male</span>\n                            </label>\n                            <label>\n                                <input type='radio' name='gender' value='2' />\n                                <span>Female</span>\n                            </label>\n                            <label>\n                                <input type='radio' name='gender' value='3' />\n                                <span>Others</span>\n                            </label>\n                        </div>\n                        <div className='response'></div>\n                    </div>\n                    <div className='input-container-bb'>\n                        <input type='number' name='contact' />\n                        <label>Contact</label>\n                        <div className='response'></div>\n                    </div>\n                </div>\n                <div className='input-block ai-c'>\n                    <div className='input-container-bb'>\n                        <input id='email-input' type='email' name='email' />\n                        <label className='flex-row'>Email \n                            <span id='email-verified' className='success ml-10'>\n                                <i className='fas fa-check mr-10'></i>\n                                Verified\n                            </span>\n                        </label>\n                        <div className='response' id='email-response'></div>\n                    </div>\n                    <label id='email-verify-btn' className='btn btn-success btn-small ml-10' onClick={emailVerification}>Verify</label>\n                </div>\n                <div className='input-block'>\n                    <div className='input-container-bb'>\n                        <input type='text' name='institution' />\n                        <label>Institution</label>\n                        <div className='response'></div>\n                    </div>\n                    <div className='input-container-bb'>\n                        <input type='date' name='dateOfBirth' />\n                        <label>Date of Birth</label>\n                        <div className='response'></div>\n                    </div>\n                </div>\n                <div className='input-block'>\n                    <div className='input-container-bb'>\n                        <input type='password' name='password' />\n                        <label>Password</label>\n                        <div className='response'></div>\n                    </div>\n                    <div className='input-container-bb'>\n                        <input type='password' name='confirmPassword' />\n                        <label>Confirm Password</label>\n                        <div className='response'></div>\n                    </div>\n                </div>\n                <div className='flex-row jc-sb'>\n                    <div className='btn btn-fade btn-small' onClick={registrationReset}>Reset</div>\n                    <button id=\"registration-btn\" className='btn btn-secondary btn-small'>Register</button>\n                </div>\n                <div className='footer'>\n                    Already have an account ? <Link className='anchor-color-primary' to='/signin'>Sign In</Link>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Signup\n",["185","186"],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/util/OtpDialog.js",[],[],["187","188"],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/components/ContactUs.js",["189","190"],[],"import React from 'react';\nimport $ from 'jquery';\nimport Flash from '../services/Flash';\n\nfunction ContactUs() {\n  return (\n      <div className='m-20'>\n        Contact Us Page not ready\n      </div>\n  );\n}\n\nexport default ContactUs;\n","/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/services/Request.js",[],[],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/services/Flash.js",[],[],"/Volumes/Personal/SRM/Major Project/React JS/quizwit/src/services/Animation.js",[],[],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/index.js",[],[],["191","192"],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/App.js",["193","194","195"],[],"import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport $ from 'jquery';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport './css/Input.css';\nimport Home from './components/Home';\nimport Header from './components/includes/Header';\nimport Footer from './components/includes/Footer';\nimport Signup from './components/Signup';\nimport ContactUs from './components/ContactUs';\nimport CookieDialog from './components/util/CookieDialog';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Routes>\n          <Route path='/' element={<Home />}/>\n          <Route path='/signup' element={<Signup />} />\n          <Route path='/contact-us' element={<ContactUs />} />\n        </Routes>\n        <Footer />\n        <CookieDialog />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n",["196","197"],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/reportWebVitals.js",[],[],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/ContactUs.js",["198","199"],[],"import React from 'react';\nimport $ from 'jquery';\nimport Flash from '../services/Flash';\nimport './css/ContactUs.css';\n\nfunction ContactUs() {\n  return (\n      <div className='contact-us flex-row'>\n        <div>\n          <form action=\"\">\n            <div className=\"header primary\">Contact Us</div>\n            <div class=\"input-block\">\n              <div class=\"input-container-floating-bb\">\n                <input type=\"text\" name='fullName' required/>\n                <label>Full Name</label>\n                <div class=\"respose\"></div>\n              </div>\n            </div>\n            <div className=\"input-block\">\n              <div class=\"input-container-floating-bb\">\n                  <input type=\"email\" name='email' required/>\n                  <label>Email</label>\n                  <div class=\"respose\"></div>\n              </div>\n            </div>\n            <div className=\"input-block\">\n              <div class=\"input-container-floating-bb\">\n                <input type=\"number\" name='contact' required/>\n                <label>Contact</label>\n                <div class=\"respose\"></div>\n              </div>\n            </div>\n            <div className=\"input-block\">\n              <div class=\"input-container-floating-bb\">\n                <textarea name=\"query\" id=\"\" cols=\"30\" rows=\"10\" required></textarea>\n                <label>Contact</label>\n                <div class=\"respose\"></div>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className='flex-full'>\n\n        </div>\n      </div>\n  );\n}\n\nexport default ContactUs;\n","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Home.js",[],[],["200","201"],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Signup.js",["202","203"],[],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery';\nimport Request from '../services/Request';\nimport OtpDialog from './util/OtpDialog';\nimport Flash from '../services/Flash';\n\nimport './css/Signup.css'\n\nfunction Signup() {\n\n    const processing = (el, text) => {\n        let icon = '<i class=\"fas fa-sync-alt fa-spin mr-5\"></i>';\n        el.innerHTML = icon + text;\n    }\n\n    const registration = (e) => {\n        processing(document.getElementById('registration-btn'), 'Processing');\n        e.preventDefault();\n        let emailInput = document.getElementById('email-input');\n        emailInput.disabled = false;\n        let formData = $('#signup-form').serialize();\n        console.log(formData);\n        let url = 'http://localhost:8080/QuizWit/Registration';\n        Request.post(url, formData).then((res) => {\n            populateResponse(res);\n        })\n        return false;\n    }\n\n    const populateResponse = (res) => {\n        document.getElementById('registration-btn').innerText = 'Register';\n        let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n        if(res.error) {\n            Flash.message(res.error, 'bg-danger');\n        }\n        if(res.success) {\n            registrationReset();\n            alert('login successful');\n            Flash.message('Registration successful', 'bg-success');\n        }\n        else {\n            let log = res.errorLog;\n            let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n            responseBlock[0].innerHTML = (log.user ? icon + log.user : '');\n            responseBlock[1].innerHTML = (log.firstName ? icon + log.firstName : '');\n\n            responseBlock[3].innerHTML = (log.gender ? icon + log.gender : '');\n            responseBlock[4].innerHTML = (log.contact ? icon + log.contact: '');\n            responseBlock[5].innerHTML = (log.email ? icon + log.email: '');\n            if(log.email) {\n                document.getElementById('email-verify-btn').style.display = 'block';\n                document.getElementById('email-verified').style.display = 'none';\n                document.getElementById('email-input').disabled = false;\n            }\n            responseBlock[7].innerHTML = (log.dateOfBirth ? icon + log.dateOfBirth: '' );\n            responseBlock[8].innerHTML = (log.password ? icon + log.password: '');\n            responseBlock[9].innerHTML = (log.confirmPassword ? icon + log.confirmPassword: '' );\n        }\n\n    }\n\n    const registrationReset = () => {\n        document.getElementById('email-verified').style.display = 'none';\n        document.getElementById('signup-form').reset();\n        document.getElementById('email-input').disabled = false;\n        let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n        for(let i=0; i<responseBlock.length; i++) {\n            responseBlock[i].innerHTML = '';\n        }\n    }\n\n    const emailVerification = () => {\n        let verifyBtn = document.getElementById('email-verify-btn');\n        processing(verifyBtn, 'Sending OTP');\n        let emailElementId = 'email-input';\n        let email = document.getElementById(emailElementId).value;\n        let userEl = document.getElementsByName('user');\n        let user;\n        if(!userEl[0].checked && !userEl[1].checked) {\n            user = '';\n        }\n        else {\n            user = '&user=';\n            user += userEl[0].checked ? userEl[0].value : userEl[1].value;\n        }\n        let data = 'email=' + email + user;\n        console.log(data);\n        let url = 'http://localhost:8080/QuizWit/EmailVerification';\n        Request.post(url, data).then((res) => {\n            renderOtpDialog(res);\n        }).catch((e) => {\n            // flash message\n        })\n        return false;\n    }\n\n    const [otpDialogToggle, setOtpDialogToggle] = useState(0);\n\n    const renderOtpDialog = (res) => {\n        console.log('render otp dialog function');\n        console.log(res);\n        let verifyBtn = document.getElementById('email-verify-btn');\n        verifyBtn.innerText = 'Verify';\n        if(res.success) {\n            setOtpDialogToggle(!otpDialogToggle);\n            toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n            let otpDialog = document.getElementById('otp-dialog');\n            let inputs = otpDialog.getElementsByTagName('input');\n            inputs[0].focus();\n            console.log('dialog open');\n        }\n        else {\n            let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n            document.getElementById('email-response').innerHTML = icon + res.error;\n        }\n    }\n\n    const toggleDivHorizontal = (id, t, openWidth, closeWidth) => {\n        let el = document.getElementById(id);\n        let width = t ? openWidth : closeWidth;\n        el.style.transition = 'all 800ms';\n        el.style.width = width + 'px';\n    }\n    \n    const matchOtp = () => {\n        let otpDialog = document.getElementById('otp-dialog');\n        let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n        let type = 'emailOtp';\n        let inputs = otpDialog.getElementsByTagName('input');\n        let otp = '';\n        for(let i=0; i<inputs.length; i++) {\n            if(inputs[i].value !== '')\n                otp += inputs[i].value;\n            else {\n                let responseBlock = otpDialog.getElementsByClassName('response')[0];\n                responseBlock.innerHTML = icon + 'OTP required';\n                return;\n            }\n        }\n        let data = 'type=' + type + '&' + 'otp=' + otp;\n        console.log(data);\n        let url = 'http://localhost:8080/QuizWit/VerifyOtp';\n        Request.post(url, data).then((res) => {\n            otpResponse(res);\n        }).catch((e) => {\n            // flash message\n        })\n    }\n\n    useEffect(() => {\n        toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n    }, [])\n    useEffect(() => {\n        toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n    }, [otpDialogToggle]);\n    const otpResponse = (res) => {\n        let otpDialog = document.getElementById('otp-dialog');\n        let responseBlock = otpDialog.getElementsByClassName('response')[0];\n        let verified = document.getElementById('email-verified');\n        if(res.success) {\n            verified.style.display = 'block';\n            document.getElementById('email-input').disabled = true;\n            document.getElementById('email-verify-btn').style.display = 'none';\n            document.getElementById('email-response').innerHTML = '';\n            setOtpDialogToggle(!otpDialogToggle);\n        }\n        else {\n            responseBlock.innerText = res.error;\n            verified.style.display = 'none';\n        }\n    }\n    return (\n        <>\n            <OtpDialog onclick1={emailVerification} onclick2={matchOtp}/>\n            <div className='signup-cover flex-row'>\n                <div className='flex-full flex-col jc-c ai-e'>\n                    <div>\n                        <h2 className='mb-20'>Explore Free Plan services with a new QuizWit account.</h2>\n                        <p>\n                            To learn more, see \n                            <br />\n                            <br />\n                            <Link to='' className='cover-btn'>QuizWit Susbcription Plans</Link>\n                        </p>\n                        <br />\n                        <br />\n                        <br />\n                        <h2>See Dashboard UI</h2>\n                        <div className='flex-row flex-wrap pt-20'>\n                            <Link to='' className='cover-btn mr-10'><i className='fas fa-users-cog mr-10'></i> Administrator</Link>\n                            <Link to='' className='cover-btn mr-10'><i className='fas fa-user-graduate mr-10'></i>Student</Link>\n                            <Link to='' className='cover-btn'><i className='fas fa-diagnoses mr-10'></i>Exam</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className='flex-full flex-col jc-c ai-c'>  \n                    <form id='signup-form' className='form sign-up-form' onSubmit={registration}>\n                        <h1 className='header primary'>Registration</h1>\n                        <div className='input-block'>\n                            <div className='customized-radio-sticky'>\n                                <label>Registration as</label>\n                                <div>\n                                    <label className='flex-full'>\n                                        <input type='radio' name='user' value='1' />\n                                        <span>Admin</span>\n                                    </label>\n                                    <label className='flex-full'>\n                                        <input type='radio' name='user' value='2' />\n                                        <span>Student</span>\n                                    </label>\n                                </div>\n                                <div className='response'></div>\n                            </div>\n                        </div>\n                        <div className='input-block'>\n                            <div className='input-container-floating-bb'>\n                                <input type='text' name='fullName' required/>\n                                <label>Full Name</label>\n                                <div className='response'></div>\n                            </div>\n                        </div>\n                        <div className='input-block'>\n                            <div className='input-container-floating-bb'>\n                                <input id='email-input' type='email' name='email' required/>\n                                <label className='flex-row'>Email \n                                    <span id='email-verified' className='success ml-10'>\n                                        <i className='fas fa-check mr-10'></i>\n                                        Verified\n                                    </span>\n                                </label>\n                                <div className='response' id='email-response'></div>\n                            </div>\n                            <div className='input-container-floating-bb'>\n                                <input type='number' name='contact' required/>\n                                <label>Contact</label>\n                                <div className='response'></div>\n                            </div>\n                        </div>\n                        {/* <div className='input-block ai-c'>\n                            <label id='email-verify-btn' className='btn btn-success btn-small ml-10' onClick={emailVerification}>Verify</label>\n                        </div> */}\n                        <div className='input-block'>\n                            <div className='input-container-floating-bb'>\n                                <input type='password' name='password' required/>\n                                <label>Password</label>\n                                <div className='response'></div>\n                            </div>\n                            <div className='input-container-floating-bb'>\n                                <input type='password' name='confirmPassword' required/>\n                                <label>Confirm Password</label>\n                                <div className='response'></div>\n                            </div>\n                        </div>\n                        <div className='flex-row jc-sb'>\n                            <div className='btn btn-fade btn-small' onClick={registrationReset}>Reset</div>\n                            <button id=\"registration-btn\" className='btn btn-primary btn-small'>Register</button>\n                        </div>\n                        <div className='footer'>\n                            Problem in registration? <Link className='anchor-color-primary' to='/support'>Support</Link>\n                        </div>\n                    </form>\n                </div>  \n            </div>\n        </>\n    )\n}\n\nexport default Signup\n","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/includes/Header.js",["204","205"],[],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport {Link, NavLink} from 'react-router-dom';\n\nimport Animation from '../../services/Animation';\n\nimport '../css/Header.css'\n\nfunction Header() {\n    const [signin, setSignin] = useState(0);\n    const signinDialog = () => {\n        setSignin(!signin);\n    }\n    useEffect(() => {\n        Animation.toggleDivVertical('signin-dialog', signin, 270, 0);\n    }, [signin]);\n    return (\n        <>\n            <header id=\"main-header\" className='main-header'>\n                <Link className='logo flex-row jc-c' to='/'>\n                    <h3>\n                        <img src='images/logo/logo.png' alt='logo'/>\n                    </h3>\n                </Link>\n                <div className='navigation flex-full flex-row jc-c'>\n                    <NavLink className='inactive' to='/'>Home</NavLink>\n                    <NavLink className='inactive' to='/services'  >Services</NavLink>\n                    <NavLink className='inactive' to='/products' >Blogs</NavLink>\n                    <NavLink className='inactive' to='/contact-us' >Contact Us</NavLink>\n                    <NavLink className='inactive' to='/dashboard' >About Us</NavLink>\n                </div>\n                <div className='sign-up flex-row'>\n                    <Link to='/signup' className='btn btn-primary btn-small'>Sign Up</Link>\n                    <button id=\"signin-btn\" className='btn btn-primary btn-small ml-10' onClick={signinDialog}>Sign In\n                        <div id='signin-dialog'>\n                            <div>\n                                <p>Sign In as</p>\n                                <div className='mt-20 mb-20'>\n                                    <a className='btn btn-primary btn-medium' href='http://localhost:3001' target='_blank'><i className='fas fa-user-cog mr-5'></i> Admin</a>\n                                    <a className='btn btn-secondary btn-medium ml-10' href='http://localhost:3002' target='_blank'><i className='fas fa-user-graduate mr-5'></i> Student</a>\n                                </div>\n                                <div></div>\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </header>\n            <div className='main-header-padding'></div>\n        </>\n\n    )\n}\n\nexport default Header","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/includes/Footer.js",[],[],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Banner.js",[],[],["206","207"],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Request.js",[],[],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Flash.js",[],[],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Animation.js",[],[],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/util/OtpDialog.js",[],[],"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/util/CookieDialog.js",["208","209"],[],"import React from 'react';\nimport { useEffect } from 'react';\n\nimport Cookie from '../../services/Cookie';\nimport Flash from '../../services/Flash';\n\nimport '../css/CookieDialog.css';\n\nfunction CookieDialog() {\n\n    useEffect(() => {\n        if(!Cookie.get('cookieDialog')) {\n            let el = document.getElementById('cookie-dialog');\n            setTimeout(() => {\n                el.style.display = 'block';\n            }, 5000);\n        }\n    }, []);\n\n    const removeDialog = () => {\n        let el = document.getElementById('cookie-dialog');\n        el.remove();\n        if(!Cookie.set(\"cookieDialog\", \"close\", 1)) {\n            Flash.message('Cookie Dialog close cookie not created', 'bg-primary');\n        }\n    }\n\n    const acceptCookie = () => {\n        if(Cookie.set(\"windowWidth\", window.innerWidth, 1)) {\n            Flash.message('Cookie accepted successfully', 'bg-primary');\n        }\n        else {\n            Flash.message('Cookie issue', 'bg-danger');\n        }\n        console.log(Cookie.get(\"windowWidth\"));\n    }\n    return (\n        <div id='cookie-dialog' className='cookie-dialog'>\n            <div>\n                <span className='close-btn' onClick={removeDialog}>\n                    <i className='fas fa-times'></i>\n                </span>\n                <h3 className='secondary mb-10 '>Your privacy</h3>\n                <p className='mb-10'>We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our <a href='' className='primary'>Cookie Policy</a> & <a href='' className='primary'>Privacy Policy</a></p>\n                <div className='flex-row jc-e'>\n                    <button className='btn btn-primary btn-small' onClick={acceptCookie}>Accept</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CookieDialog;\n","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/services/Cookie.js",["210"],[],"import Flash from '../services/Flash';\n\nclass Cookie {\n\n  create(cn, cv, e) {\n    let days = e*24*60*60*1000;\n    const d = new Date();\n    d.setTime(d.getTime() + days);\n    let str = cn + \"=\" + cv + \"; expires=\" + d.toUTCString() + \"; path=/\";\n    return str;\n  }\n\n  // expiresAfter time in days\n  set(cookieName, cookieValue, expiresAfter) {\n    try {\n      document.cookie = this.create(cookieName, cookieValue, expiresAfter);\n      return true;\n    } catch(e){\n      Flash.message(e);\n    }\n  }\n\n  get(cookieName) {\n    let decodedCookie = decodeURIComponent(document.cookie);\n    decodedCookie = decodedCookie.trim();\n    let cookies = decodedCookie.split(';');\n    let value = '';\n    cookies.forEach((c) => {\n      if(c) {\n        c = c.trim();\n        let [cn, cv] = c.split('=');\n        if(cn == cookieName) {\n          value = cv;\n          return;\n        }\n      }\n    })\n    return value;\n  }\n\n  delete(cookieName) {\n    this.set(cookieName, '', -1);\n  }\n}\n\nexport default new Cookie();","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Faq.js",["211","212","213"],[],"import React from 'react';\nimport { useEffect } from 'react';\nimport $ from 'jquery';\nimport './css/Faq.css';\n\nfunction Faq() {\n    useEffect(() => {\n        $(\"#faq-btn\").click(() => {\n            $('html, body').animate({\n                scrollTop: $(\".faq\").offset().top - 50\n            }, 1);\n        });\n\n        let questions = document.getElementsByClassName('question');\n        let answers = document.getElementsByClassName('answer');\n        let iconContainer = document.getElementsByClassName('icon-container');\n        for(let i=0; i<questions.length; i++) {\n            answers[i].style.display= 'none';\n            questions[i].addEventListener('click', () => {\n                let v = answers[i].style.display;\n                console.log(v);\n                let icon = v == 'none' ? 'fas fa-times' : 'fas fa-plus';\n                v = v == 'block' ? 'none' : 'block';\n                answers[i].style.display = v;\n                icon = `<i class='${icon}'></i>`;\n                questions[i].getElementsByClassName('icon-container')[0].innerHTML = icon;\n            });\n        }\n\n    }, []);\n    return (\n        <div className='faq'>\n            <h1>Frequently Asked Questions</h1>\n            <div className='container'>\n                <div className='question'>\n                    <div>\n                        What is QuizWit?\n                    </div>\n                    <div className='icon-container'>\n                        <i className='fas fa-plus'></i>\n                    </div>\n                </div>\n                <div className='answer'>\n                    <div>QuizWit is a online exam web application that enables you to tackle your weak points in exams with the help of analytics.\n\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                <div className='question'>\n                    <div>\n                        How much QuizWit cost?\n                    </div>\n                    <div className='icon-container'>\n                        <i className='fas fa-plus'></i>\n                    </div>\n                </div>\n                <div className='answer'>\n                    <div>\n                        We provide different subscription plans under which certain features are available.\n                        Currently we are providing 3 plans for administrator and 2 plans for students.\n                        <br />\n                        For more <span href='' className='primary ul view-plans-btn cursor-p'>View Plans</span>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                <div className='question'>\n                    <div>\n                        Why Quizwit?\n                    </div>\n                    <div className='icon-container'>\n                        <i className='fas fa-plus'></i>\n                    </div>\n                </div>\n                <div className='answer'>\n                    <div>\n                        We use AWS S3 to store multimedia files for fast processing.\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Faq;\n","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/util/PlanCard.js",["214","215"],[],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport '../css/PlanCard.css';\n\nfunction PlanCard(props) {\n  const [contains, setContains] = useState([]);\n  useEffect(() => {\n    setContains(props.contains);\n  }, []);\n  \n  return (\n    <a className='plan-card' href=''>\n      <div className='plan-name'>{props.name}</div>\n      <div>\n          <i className='fas fa-rupee-sign card-rupee-sign'></i>\n          <div className='bubble-tl'></div>\n          <div className='bubble-tr'></div>\n          <div className='plan-charge'>{props.amount} <i className='fas fa-rupee-sign ml-10'></i></div>\n          <div className='plan-duration'> For {props.durationInMonths} {props.durationInMonths > 1 ? 'months': 'month' }</div>\n          <div className='plan-includes'>{contains.map((v, key) => {\n            return <li key={key} className='flex-row plan-items'>\n              <div>\n                <i className={'fas ' + (v.type ? 'fa-check ': 'fa-times ') + 'mr-10 ' + (v.type ? 'available': 'not-available')}></i> \n              </div>\n              <p>{v.name}</p>\n              </li>\n          })}</div>\n      </div>\n    </a>\n  );\n}\n\nexport default PlanCard;\n","/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Plans.js",[],[],{"ruleId":"216","severity":1,"message":"217","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":9},{"ruleId":"216","severity":1,"message":"220","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":12},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":39,"column":37,"nodeType":"227","messageId":"228","endLine":39,"endColumn":124,"fix":"229"},{"ruleId":"225","severity":1,"message":"226","line":40,"column":37,"nodeType":"227","messageId":"228","endLine":40,"endColumn":132,"fix":"230"},{"ruleId":"231","severity":1,"message":"232","line":141,"column":41,"nodeType":"233","messageId":"234","endLine":141,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":153,"column":8,"nodeType":"237","endLine":153,"endColumn":10,"suggestions":"238"},{"ruleId":"221","replacedBy":"239"},{"ruleId":"223","replacedBy":"240"},{"ruleId":"221","replacedBy":"241"},{"ruleId":"223","replacedBy":"242"},{"ruleId":"216","severity":1,"message":"217","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":9},{"ruleId":"216","severity":1,"message":"243","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":13},{"ruleId":"221","replacedBy":"244"},{"ruleId":"223","replacedBy":"245"},{"ruleId":"216","severity":1,"message":"246","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":19},{"ruleId":"216","severity":1,"message":"217","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":9},{"ruleId":"216","severity":1,"message":"220","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":12},{"ruleId":"221","replacedBy":"247"},{"ruleId":"223","replacedBy":"248"},{"ruleId":"216","severity":1,"message":"217","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":9},{"ruleId":"216","severity":1,"message":"243","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":13},{"ruleId":"221","replacedBy":"249"},{"ruleId":"223","replacedBy":"250"},{"ruleId":"231","severity":1,"message":"232","line":142,"column":41,"nodeType":"233","messageId":"234","endLine":142,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":154,"column":8,"nodeType":"237","endLine":154,"endColumn":10,"suggestions":"251"},{"ruleId":"225","severity":1,"message":"226","line":39,"column":37,"nodeType":"227","messageId":"228","endLine":39,"endColumn":124,"fix":"252"},{"ruleId":"225","severity":1,"message":"226","line":40,"column":37,"nodeType":"227","messageId":"228","endLine":40,"endColumn":132,"fix":"253"},{"ruleId":"221","replacedBy":"254"},{"ruleId":"223","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":44,"column":190,"nodeType":"227","endLine":44,"endColumn":221},{"ruleId":"256","severity":1,"message":"257","line":44,"column":241,"nodeType":"227","endLine":44,"endColumn":272},{"ruleId":"258","severity":1,"message":"259","line":32,"column":15,"nodeType":"233","messageId":"260","endLine":32,"endColumn":17},{"ruleId":"216","severity":1,"message":"261","line":16,"column":13,"nodeType":"218","messageId":"219","endLine":16,"endColumn":26},{"ruleId":"258","severity":1,"message":"259","line":22,"column":30,"nodeType":"233","messageId":"260","endLine":22,"endColumn":32},{"ruleId":"258","severity":1,"message":"259","line":23,"column":23,"nodeType":"233","messageId":"260","endLine":23,"endColumn":25},{"ruleId":"235","severity":1,"message":"262","line":10,"column":6,"nodeType":"237","endLine":10,"endColumn":8,"suggestions":"263"},{"ruleId":"256","severity":1,"message":"257","line":13,"column":5,"nodeType":"227","endLine":13,"endColumn":38},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","no-native-reassign",["264"],"no-negated-in-lhs",["265"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"266","text":"267"},{"range":"268","text":"267"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'otpDialogToggle'. Either include it or remove the dependency array.","ArrayExpression",["269"],["264"],["265"],["264"],["265"],"'Flash' is defined but never used.",["264"],["265"],"'useEffect' is defined but never used.",["264"],["265"],["264"],["265"],["270"],{"range":"271","text":"267"},{"range":"272","text":"267"},["264"],["265"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'iconContainer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.contains'. Either include it or remove the dependency array. If 'setContains' needs the current value of 'props.contains', you can also switch to useReducer instead of useState and read 'props.contains' in the reducer.",["273"],"no-global-assign","no-unsafe-negation",[1713,1713]," rel=\"noreferrer\"",[1854,1854],{"desc":"274","fix":"275"},{"desc":"274","fix":"276"},[1818,1818],[2000,2000],{"desc":"277","fix":"278"},"Update the dependencies array to be: [otpDialogToggle]",{"range":"279","text":"280"},{"range":"281","text":"280"},"Update the dependencies array to be: [props.contains]",{"range":"282","text":"283"},[5980,5982],"[otpDialogToggle]",[5981,5983],[237,239],"[props.contains]"]