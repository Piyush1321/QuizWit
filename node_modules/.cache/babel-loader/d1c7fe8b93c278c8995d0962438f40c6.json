{"ast":null,"code":"var _jsxFileName = \"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery';\nimport Request from '../services/Request';\nimport './css/Signup.css';\nimport OtpDialog from './util/OtpDialog';\nimport Flash from '../services/Flash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const processing = (el, text) => {\n    let icon = '<i class=\"fas fa-sync-alt fa-spin mr-5\"></i>';\n    el.innerHTML = icon + text;\n  };\n\n  const registration = e => {\n    processing(document.getElementById('registration-btn'), 'Processing');\n    e.preventDefault();\n    let emailInput = document.getElementById('email-input');\n    emailInput.disabled = false;\n    let formData = $('#signup-form').serialize();\n    console.log(formData);\n    let url = 'http://localhost:8080/QuizWit/Registration';\n    Request.post(url, formData).then(res => {\n      populateResponse(res);\n    });\n    return false;\n  };\n\n  const populateResponse = res => {\n    document.getElementById('registration-btn').innerText = 'Register';\n    let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n\n    if (res.error) {\n      Flash.message(res.error, 'bg-danger');\n    }\n\n    if (res.success) {\n      registrationReset();\n      alert('login successful');\n      Flash.message('Registration successful', 'bg-success');\n    } else {\n      let log = res.errorLog;\n      let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n      responseBlock[0].innerHTML = log.user ? icon + log.user : '';\n      responseBlock[1].innerHTML = log.firstName ? icon + log.firstName : '';\n      responseBlock[3].innerHTML = log.gender ? icon + log.gender : '';\n      responseBlock[4].innerHTML = log.contact ? icon + log.contact : '';\n      responseBlock[5].innerHTML = log.email ? icon + log.email : '';\n\n      if (log.email) {\n        document.getElementById('email-verify-btn').style.display = 'block';\n        document.getElementById('email-verified').style.display = 'none';\n        document.getElementById('email-input').disabled = false;\n      }\n\n      responseBlock[7].innerHTML = log.dateOfBirth ? icon + log.dateOfBirth : '';\n      responseBlock[8].innerHTML = log.password ? icon + log.password : '';\n      responseBlock[9].innerHTML = log.confirmPassword ? icon + log.confirmPassword : '';\n    }\n  };\n\n  const registrationReset = () => {\n    document.getElementById('email-verified').style.display = 'none';\n    document.getElementById('signup-form').reset();\n    document.getElementById('email-input').disabled = false;\n    let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n\n    for (let i = 0; i < responseBlock.length; i++) {\n      responseBlock[i].innerHTML = '';\n    }\n  };\n\n  const emailVerification = () => {\n    let verifyBtn = document.getElementById('email-verify-btn');\n    processing(verifyBtn, 'Sending OTP');\n    let emailElementId = 'email-input';\n    let email = document.getElementById(emailElementId).value;\n    let userEl = document.getElementsByName('user');\n    let user;\n\n    if (!userEl[0].checked && !userEl[1].checked) {\n      user = '';\n    } else {\n      user = '&user=';\n      user += userEl[0].checked ? userEl[0].value : userEl[1].value;\n    }\n\n    let data = 'email=' + email + user;\n    console.log(data);\n    let url = 'http://localhost:8080/QuizWit/EmailVerification';\n    Request.post(url, data).then(res => {\n      renderOtpDialog(res);\n    }).catch(e => {// flash message\n    });\n    return false;\n  };\n\n  const [otpDialogToggle, setOtpDialogToggle] = useState(0);\n\n  const renderOtpDialog = res => {\n    console.log('render otp dialog function');\n    console.log(res);\n    let verifyBtn = document.getElementById('email-verify-btn');\n    verifyBtn.innerText = 'Verify';\n\n    if (res.success) {\n      setOtpDialogToggle(!otpDialogToggle);\n      toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n      let otpDialog = document.getElementById('otp-dialog');\n      let inputs = otpDialog.getElementsByTagName('input');\n      inputs[0].focus();\n      console.log('dialog open');\n    } else {\n      let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n      document.getElementById('email-response').innerHTML = icon + res.error;\n    }\n  };\n\n  const toggleDivHorizontal = (id, t, openWidth, closeWidth) => {\n    let el = document.getElementById(id);\n    let width = t ? openWidth : closeWidth;\n    el.style.transition = 'all 800ms';\n    el.style.width = width + 'px';\n  };\n\n  const matchOtp = () => {\n    let otpDialog = document.getElementById('otp-dialog');\n    let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n    let type = 'emailOtp';\n    let inputs = otpDialog.getElementsByTagName('input');\n    let otp = '';\n\n    for (let i = 0; i < inputs.length; i++) {\n      if (inputs[i].value !== '') otp += inputs[i].value;else {\n        let responseBlock = otpDialog.getElementsByClassName('response')[0];\n        responseBlock.innerHTML = icon + 'OTP required';\n        return;\n      }\n    }\n\n    let data = 'type=' + type + '&' + 'otp=' + otp;\n    console.log(data);\n    let url = 'http://localhost:8080/QuizWit/VerifyOtp';\n    Request.post(url, data).then(res => {\n      otpResponse(res);\n    }).catch(e => {// flash message\n    });\n  };\n\n  useEffect(() => {\n    toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n  }, []);\n  useEffect(() => {\n    toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n  }, [otpDialogToggle]);\n\n  const otpResponse = res => {\n    let otpDialog = document.getElementById('otp-dialog');\n    let responseBlock = otpDialog.getElementsByClassName('response')[0];\n    let verified = document.getElementById('email-verified');\n\n    if (res.success) {\n      verified.style.display = 'block';\n      document.getElementById('email-input').disabled = true;\n      document.getElementById('email-verify-btn').style.display = 'none';\n      document.getElementById('email-response').innerHTML = '';\n      setOtpDialogToggle(!otpDialogToggle);\n    } else {\n      responseBlock.innerText = res.error;\n      verified.style.display = 'none';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-cover cover flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(OtpDialog, {\n      onclick1: emailVerification,\n      onclick2: matchOtp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"ZKiKMF1zxGob2DWPNwhzrddeO8E=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Signup.js"],"names":["React","useState","useEffect","Link","$","Request","OtpDialog","Flash","Signup","processing","el","text","icon","innerHTML","registration","e","document","getElementById","preventDefault","emailInput","disabled","formData","serialize","console","log","url","post","then","res","populateResponse","innerText","responseBlock","getElementsByClassName","error","message","success","registrationReset","alert","errorLog","user","firstName","gender","contact","email","style","display","dateOfBirth","password","confirmPassword","reset","i","length","emailVerification","verifyBtn","emailElementId","value","userEl","getElementsByName","checked","data","renderOtpDialog","catch","otpDialogToggle","setOtpDialogToggle","toggleDivHorizontal","otpDialog","inputs","getElementsByTagName","focus","id","t","openWidth","closeWidth","width","transition","matchOtp","type","otp","otpResponse","verified"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery';\nimport Request from '../services/Request';\nimport './css/Signup.css'\nimport OtpDialog from './util/OtpDialog';\nimport Flash from '../services/Flash';\n\nfunction Signup() {\n\n    const processing = (el, text) => {\n        let icon = '<i class=\"fas fa-sync-alt fa-spin mr-5\"></i>';\n        el.innerHTML = icon + text;\n    }\n\n    const registration = (e) => {\n        processing(document.getElementById('registration-btn'), 'Processing');\n        e.preventDefault();\n        let emailInput = document.getElementById('email-input');\n        emailInput.disabled = false;\n        let formData = $('#signup-form').serialize();\n        console.log(formData);\n        let url = 'http://localhost:8080/QuizWit/Registration';\n        Request.post(url, formData).then((res) => {\n            populateResponse(res);\n        })\n        return false;\n    }\n\n    const populateResponse = (res) => {\n        document.getElementById('registration-btn').innerText = 'Register';\n        let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n        if(res.error) {\n            Flash.message(res.error, 'bg-danger');\n        }\n        if(res.success) {\n            registrationReset();\n            alert('login successful');\n            Flash.message('Registration successful', 'bg-success');\n        }\n        else {\n            let log = res.errorLog;\n            let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n            responseBlock[0].innerHTML = (log.user ? icon + log.user : '');\n            responseBlock[1].innerHTML = (log.firstName ? icon + log.firstName : '');\n\n            responseBlock[3].innerHTML = (log.gender ? icon + log.gender : '');\n            responseBlock[4].innerHTML = (log.contact ? icon + log.contact: '');\n            responseBlock[5].innerHTML = (log.email ? icon + log.email: '');\n            if(log.email) {\n                document.getElementById('email-verify-btn').style.display = 'block';\n                document.getElementById('email-verified').style.display = 'none';\n                document.getElementById('email-input').disabled = false;\n            }\n            responseBlock[7].innerHTML = (log.dateOfBirth ? icon + log.dateOfBirth: '' );\n            responseBlock[8].innerHTML = (log.password ? icon + log.password: '');\n            responseBlock[9].innerHTML = (log.confirmPassword ? icon + log.confirmPassword: '' );\n        }\n\n    }\n\n    const registrationReset = () => {\n        document.getElementById('email-verified').style.display = 'none';\n        document.getElementById('signup-form').reset();\n        document.getElementById('email-input').disabled = false;\n        let responseBlock = document.getElementById('signup-form').getElementsByClassName('response');\n        for(let i=0; i<responseBlock.length; i++) {\n            responseBlock[i].innerHTML = '';\n        }\n    }\n\n    const emailVerification = () => {\n        let verifyBtn = document.getElementById('email-verify-btn');\n        processing(verifyBtn, 'Sending OTP');\n        let emailElementId = 'email-input';\n        let email = document.getElementById(emailElementId).value;\n        let userEl = document.getElementsByName('user');\n        let user;\n        if(!userEl[0].checked && !userEl[1].checked) {\n            user = '';\n        }\n        else {\n            user = '&user=';\n            user += userEl[0].checked ? userEl[0].value : userEl[1].value;\n        }\n        let data = 'email=' + email + user;\n        console.log(data);\n        let url = 'http://localhost:8080/QuizWit/EmailVerification';\n        Request.post(url, data).then((res) => {\n            renderOtpDialog(res);\n        }).catch((e) => {\n            // flash message\n        })\n        return false;\n    }\n\n    const [otpDialogToggle, setOtpDialogToggle] = useState(0);\n\n    const renderOtpDialog = (res) => {\n        console.log('render otp dialog function');\n        console.log(res);\n        let verifyBtn = document.getElementById('email-verify-btn');\n        verifyBtn.innerText = 'Verify';\n        if(res.success) {\n            setOtpDialogToggle(!otpDialogToggle);\n            toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n            let otpDialog = document.getElementById('otp-dialog');\n            let inputs = otpDialog.getElementsByTagName('input');\n            inputs[0].focus();\n            console.log('dialog open');\n        }\n        else {\n            let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n            document.getElementById('email-response').innerHTML = icon + res.error;\n        }\n    }\n\n    const toggleDivHorizontal = (id, t, openWidth, closeWidth) => {\n        let el = document.getElementById(id);\n        let width = t ? openWidth : closeWidth;\n        el.style.transition = 'all 800ms';\n        el.style.width = width + 'px';\n    }\n    \n    const matchOtp = () => {\n        let otpDialog = document.getElementById('otp-dialog');\n        let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n        let type = 'emailOtp';\n        let inputs = otpDialog.getElementsByTagName('input');\n        let otp = '';\n        for(let i=0; i<inputs.length; i++) {\n            if(inputs[i].value !== '')\n                otp += inputs[i].value;\n            else {\n                let responseBlock = otpDialog.getElementsByClassName('response')[0];\n                responseBlock.innerHTML = icon + 'OTP required';\n                return;\n            }\n        }\n        let data = 'type=' + type + '&' + 'otp=' + otp;\n        console.log(data);\n        let url = 'http://localhost:8080/QuizWit/VerifyOtp';\n        Request.post(url, data).then((res) => {\n            otpResponse(res);\n        }).catch((e) => {\n            // flash message\n        })\n    }\n\n    useEffect(() => {\n        toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n    }, [])\n    useEffect(() => {\n        toggleDivHorizontal('otp-dialog', otpDialogToggle, 344, 0);\n    }, [otpDialogToggle]);\n    const otpResponse = (res) => {\n        let otpDialog = document.getElementById('otp-dialog');\n        let responseBlock = otpDialog.getElementsByClassName('response')[0];\n        let verified = document.getElementById('email-verified');\n        if(res.success) {\n            verified.style.display = 'block';\n            document.getElementById('email-input').disabled = true;\n            document.getElementById('email-verify-btn').style.display = 'none';\n            document.getElementById('email-response').innerHTML = '';\n            setOtpDialogToggle(!otpDialogToggle);\n        }\n        else {\n            responseBlock.innerText = res.error;\n            verified.style.display = 'none';\n        }\n    }\n    return (\n        <div className='signup-cover cover flex-row'>\n            <OtpDialog onclick1={emailVerification} onclick2={matchOtp}/>\n            <div className='flex-full'>\n\n            </div>\n            <div className='flex-full'>\n            </div>  \n        </div>\n    )\n}\n\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}