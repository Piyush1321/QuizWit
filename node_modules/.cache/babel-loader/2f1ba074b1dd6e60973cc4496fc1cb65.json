{"ast":null,"code":"var _jsxFileName = \"/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Plans.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PlanCard from './util/PlanCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Plans() {\n  _s();\n\n  useEffect(() => {\n    document.getElementById('faq-btn').addEventListener('click', () => {\n      document.getElementsByClassName('faq')[0].scrollIntoView();\n    });\n    $(\"#faq-btn\").click(() => {\n      $('html, body').animate({\n        scrollTop: $(\".faq\").offset().top - 50\n      }, 1);\n    });\n    let questions = document.getElementsByClassName('question');\n    let answers = document.getElementsByClassName('answer');\n    let iconContainer = document.getElementsByClassName('icon-container');\n\n    for (let i = 0; i < questions.length; i++) {\n      answers[i].style.display = 'none';\n      questions[i].addEventListener('click', () => {\n        let v = answers[i].style.display;\n        console.log(v);\n        let icon = v == 'none' ? 'fas fa-times' : 'fas fa-plus';\n        v = v == 'block' ? 'none' : 'block';\n        answers[i].style.display = v;\n        icon = `<i class='${icon}'></i>`;\n        questions[i].getElementsByClassName('icon-container')[0].innerHTML = icon;\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plans\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Elevate Your Academic Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-row\",\n      children: [/*#__PURE__*/_jsxDEV(PlanCard, {\n        name: \"Free\",\n        amount: \"100\",\n        contains: ['Create 2 exams', 'Create 2 section per exam', 'Maximum 20 Questions in a section', 'Timer on Exam']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PlanCard, {\n        name: \"Silver\",\n        amount: \"300\",\n        contains: ['Create 5 exams', 'Create 1 user', 'Create 3 section per exam', 'Maximum 50 Questions in a section', 'Timer on Exam/Section']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PlanCard, {\n        name: \"Gold\",\n        amount: \"500\",\n        contains: ['Create 10 exams', 'Create 3 user', 'Create 5 section per exam', 'Maximum 100 Questions in a section', 'Timer on Exam/Section/Question', 'Navigation settings', 'Private Add student group']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Plans, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Plans;\nexport default Plans;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/QuizWit/src/components/Plans.js"],"names":["React","PlanCard","Plans","useEffect","document","getElementById","addEventListener","getElementsByClassName","scrollIntoView","$","click","animate","scrollTop","offset","top","questions","answers","iconContainer","i","length","style","display","v","console","log","icon","innerHTML"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PlanCard from './util/PlanCard';\n\nfunction Plans() {\n    useEffect(() => {\n        document.getElementById('faq-btn').addEventListener('click', () => {\n            document.getElementsByClassName('faq')[0].scrollIntoView();\n        });\n        $(\"#faq-btn\").click(() => {\n            $('html, body').animate({\n                scrollTop: $(\".faq\").offset().top - 50\n            }, 1);\n        });\n\n        let questions = document.getElementsByClassName('question');\n        let answers = document.getElementsByClassName('answer');\n        let iconContainer = document.getElementsByClassName('icon-container');\n        for(let i=0; i<questions.length; i++) {\n            answers[i].style.display= 'none';\n            questions[i].addEventListener('click', () => {\n                let v = answers[i].style.display;\n                console.log(v);\n                let icon = v == 'none' ? 'fas fa-times' : 'fas fa-plus';\n                v = v == 'block' ? 'none' : 'block';\n                answers[i].style.display = v;\n                icon = `<i class='${icon}'></i>`;\n                questions[i].getElementsByClassName('icon-container')[0].innerHTML = icon;\n            });\n        }\n\n    }, []);\n  return (\n      <div className='plans'>\n        <h1>Elevate Your Academic Skills</h1>\n        <div className='plan-row'>\n            <PlanCard \n                name='Free'\n                amount='100'\n                contains={['Create 2 exams', 'Create 2 section per exam', 'Maximum 20 Questions in a section', 'Timer on Exam']}\n            />\n            <PlanCard\n                name='Silver'\n                amount='300'\n                contains={['Create 5 exams', 'Create 1 user', 'Create 3 section per exam', 'Maximum 50 Questions in a section', 'Timer on Exam/Section']}\n            />\n            <PlanCard\n                name='Gold'\n                amount='500'\n                contains={['Create 10 exams', 'Create 3 user', 'Create 5 section per exam', 'Maximum 100 Questions in a section', 'Timer on Exam/Section/Question', 'Navigation settings', 'Private Add student group']}\n            />\n        </div>\n      </div>\n  );\n}\n\nexport default Plans;\n"]},"metadata":{},"sourceType":"module"}